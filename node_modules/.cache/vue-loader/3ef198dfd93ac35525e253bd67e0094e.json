{"remainingRequest":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shankar/Documents/Projects/Javascript/cockatoo-player/src/CockatooPlayer.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/shankar/Documents/Projects/Javascript/cockatoo-player/src/CockatooPlayer.vue","mtime":1584775319936},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgphdWRpbyB7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLXJhZGl1czogMHB4OwogIGJhY2tncm91bmQ6ICNmMWYzZjQ7Cn0K"},{"version":3,"sources":["CockatooPlayer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA","file":"CockatooPlayer.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"player\">\n    <audio ref=\"audio\" @timeupdate=\"time = $event.target.currentTime\" controls>\n      <source src=\"./sajna.mp3\" type=\"audio/mpeg\" />Your browser does not support the audio element.\n    </audio>\n    <br />\n    <input type=\"number\" v-model.number=\"time\" />\n  </div>\n</template>\n\n<script>\nimport fs from 'fs';\nimport parser from 'subtitles-parser';\n\nexport default {\n  name: \"CockatooPlayer\",\n  data: () => {\n    return {\n      time: 0\n    };\n  },\n  watch: {\n    time(time) {\n      if (Math.abs(time - this.$refs.audio.currentTime) > 0.5) {\n        this.$refs.audio.currentTime = time;\n      }\n    }\n  },\n  beforeMount() {\n    const srt = fs.readFileSync('./my.srt');\n    let srtData = parser.fromSrt(srt);\n    console.log(srtData);\n  }\n};\n</script>\n\n\n<style>\naudio {\n  width: 100%;\n  border-radius: 0px;\n  background: #f1f3f4;\n}\n</style>"]}]}