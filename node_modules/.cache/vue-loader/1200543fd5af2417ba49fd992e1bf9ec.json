{"remainingRequest":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shankar/Documents/Projects/Javascript/cockatoo-player/src/CockatooPlayer.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/shankar/Documents/Projects/Javascript/cockatoo-player/src/CockatooPlayer.vue","mtime":1584789590556},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgphdWRpbyB7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLXJhZGl1czogMHB4OwogIGJhY2tncm91bmQ6ICNmMWYzZjQ7Cn0K"},{"version":3,"sources":["CockatooPlayer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA","file":"CockatooPlayer.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"player\">\n    <audio id=\"audio\" @timeupdate=\"time = $event.target.currentTime\" controls>\n      <source src=\"./purusha-sukta.mp3\" type=\"audio/mpeg\" />\n      Your browser does not support the audio element.\n    </audio>\n    <br/>\n    <!-- <p>{{ trackCurrentTime }}</p> -->\n    <!-- <ul>\n      <li v-for=\"(line, index) in subtitleLines\" :key=\"index\">\n        {{ subtitle }} \n        {{ line.start }} - {{ line.end }} : {{ line.text }}\n      </li>\n    </ul> -->\n    <p style=\"background: 'aliceblue'; width: 100%; font-size: large;\">\n      {{ subtitle }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { parse } from 'subtitle'\n\nexport default {\n  name: \"CockatooPlayer\",\n  data: () => {\n    return {\n      time: 0,\n      subtitleVtt: 'https://gist.githubusercontent.com/psgganesh/16ab9d4978c3945cc96f5962e4220041/raw/b63a11f3712a0611eae1e13d9fb9de98d1f0fea5/transcript.vtt',\n      subtitleLines: []\n    }\n  },\n  mounted() {\n    this.setup();\n  },\n  computed: {\n    subtitle() {\n      let line = this.subtitleLines.filter(function (el) {\n        let absoluteTime = Math.abs(this.time *1000);\n        if((absoluteTime >= el.start) && (absoluteTime <= el.end)) {\n          return el;\n        }\n      }.bind(this));\n      return (line.length > 0) ? line.pop().text : '';\n    }\n  },\n  methods: {\n    async setup() {\n      let vttResponse = null;\n      await axios.get(this.subtitleVtt)\n      .then(function (response) {\n        // handle success\n        vttResponse = parse(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        //\n      });\n      this.subtitleLines = vttResponse;\n    },\n    highlightActiveClass(line) {\n      console.log(line);\n      return 0;\n    }\n  }\n};\n</script>\n\n\n<style>\naudio {\n  width: 100%;\n  border-radius: 0px;\n  background: #f1f3f4;\n}\n</style>"]}]}