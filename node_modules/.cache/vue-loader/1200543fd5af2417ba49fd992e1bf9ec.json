{"remainingRequest":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shankar/Documents/Projects/Javascript/cockatoo-player/src/CockatooPlayer.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/shankar/Documents/Projects/Javascript/cockatoo-player/src/CockatooPlayer.vue","mtime":1584800571685},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shankar/.nvm/versions/node/v12.16.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojcGxheWVyIHsKICB3aWR0aDogMTAwJTsKfQphdWRpbyB7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLXJhZGl1czogMHB4OwogIGJhY2tncm91bmQ6ICNmMWYzZjQ7CiAgdXNlci1zZWxlY3Q6IG5vbmU7CiAgb3V0bGluZTogbm9uZTsKfQoucGFkIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogeC1sYXJnZTsKICBwYWRkaW5nOiAwcHg7Cn0KLmxpbmUgewogIGNvbG9yOiAjQ0NDQ0NDOwogIHVzZXItc2VsZWN0OiBub25lOwogIGZvbnQtc2l6ZTogLXdlYmtpdC14eHgtbGFyZ2U7Cn0KLmxpbmU6aG92ZXIgewogIGN1cnNvcjogcG9pbnRlcjsKICBiYWNrZ3JvdW5kOiAjRjFGM0Y0NTk7Cn0KLmxpbmUuYWN0aXZlIHsKICBjb2xvcjogIzQ0NDQ0NDsKfQo="},{"version":3,"sources":["CockatooPlayer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CockatooPlayer.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"player\">\n    <audio ref=\"audio\" id=\"audio\" @timeupdate=\"updateTimeSprites\" controls controlsList=\"nodownload\">\n      <source src=\"./purusha-sukta.mp3\" type=\"audio/mpeg\" preload=\"auto\" />\n      Your browser does not support the audio element.\n    </audio>\n    <ul class=\"pad\">\n      <li class=\"line\" v-bind:class=\"{ active: (subtitle === line.text) }\" @click=\"seek(line)\" v-for=\"(line, index) in subtitleLines\" :key=\"index\">\n        {{ line.text }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { parse } from 'subtitle'\n\nexport default {\n  name: \"CockatooPlayer\",\n  data: () => {\n    return {\n      time: 0,\n      end: 0,\n      subtitleVtt: 'https://gist.githubusercontent.com/psgganesh/16ab9d4978c3945cc96f5962e4220041/raw/19b46338647da63862bf835ce08b798fa2efe7ab/transcript.vtt',\n      subtitleLines: []\n    }\n  },\n  mounted() {\n    this.setup();\n  },\n  computed: {\n    subtitle() {\n      let line = this.subtitleLines.filter(function (el) {\n        let absoluteTime = Math.abs(this.time *1000);\n        if((absoluteTime >= el.start) && (absoluteTime <= el.end)) {\n          return el;\n        }\n      }.bind(this));\n      return (line.length > 0) ? line.pop().text : '';\n    }\n  },\n  methods: {\n    async setup() {\n      let vttResponse = null;\n      await axios.get(this.subtitleVtt)\n      .then(function (response) {\n        // handle success\n        vttResponse = parse(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        //\n      });\n      this.subtitleLines = vttResponse;\n    },\n    seek(line) {\n      this.$refs.audio.currentTime = Math.abs(line.start / 1000);\n      this.end = line.end;\n      this.$refs.audio.play();\n    },\n    updateTimeSprites(event) {\n      this.time = event.target.currentTime;\n      if(this.end !== 0) {\n        if(Math.abs(this.time *1000) >= (this.end) + 100) {\n          this.$refs.audio.pause();\n          this.end = 0;\n          this.$refs.audio.currentTime = 0;\n        }\n      }\n    }\n  }\n};\n</script>\n\n\n<style>\n#player {\n  width: 100%;\n}\naudio {\n  width: 100%;\n  border-radius: 0px;\n  background: #f1f3f4;\n  user-select: none;\n  outline: none;\n}\n.pad {\n  list-style-type: none;\n  text-align: center;\n  font-size: x-large;\n  padding: 0px;\n}\n.line {\n  color: #CCCCCC;\n  user-select: none;\n  font-size: -webkit-xxx-large;\n}\n.line:hover {\n  cursor: pointer;\n  background: #F1F3F459;\n}\n.line.active {\n  color: #444444;\n}\n</style>"]}]}